// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000 a
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001 b
 *                            etc.                                010 c
                                                                  011 d
                                                                  100 e
                                                                  101 f
                                                                  110 g
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111 h
    // 虽然比较难想象，但是这个就是一个分配问题
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:

    // a b
    DMux(in=in, sel=sel[0], a=outa, b=outb);
    // c d
    DMux(in=in, sel=sel[0], a=outc, b=outd);
    // e f
    DMux(in=in, sel=sel[0], a=oute, b=outf);
    // g h
    DMux(in=in, sel=sel[0], a=outg, b=outh);

    // a c
    DMux(in=outa, sel=sel[1], a=out1, b=out2);
    // e g
    DMux(in=outb, sel=sel[1], a=out3, b=out4);
    DMux(in=out1, sel=sel[2], a=a, b=e);
    DMux(in=out2, sel=sel[2], a=c, b=g);

    // b d
    DMux(in=outb, sel=sel[1], a=out5, b=out6);
    // f h
    DMux(in=outb, sel=sel[1], a=out7, b=out8);
    DMux(in=out5, sel=sel[2], a=b, b=f);
    DMux(in=out6, sel=sel[2], a=d, b=h);

}